library(phangorn)
library(car)
library(phylopath)

source("analysesMitMoltree3.Rscript")

modelsdn1 <- list(
one = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * mating * massbxcx),
two = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * mating * massbxcx),
three = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
four = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating * massbxcx),
five = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * massbxcx),
six = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * massbxcx),
seven = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * mating),
eight = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * mating),
nine = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn),
ten = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn),
eleven = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
twelve = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ massbxcx),
thirt = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
fourt = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating),
a = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating * massbxcx),
b = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * mating * massbxcx),
c = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
d = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating * massbxcx),
e = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * massbxcx),
f = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * massbxcx),
g = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating),
h = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * mating),
i = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds),
j = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds),
k = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
l = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ massbxcx),
m = DAG(dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
n = DAG(mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating),

aa = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * mating * massbxcx),
ab = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * mating * massbxcx),
ac = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
ad = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating * massbxcx),
ae = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * massbxcx),
af = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * massbxcx),
ag = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn * mating),
ah = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn * mating),
ai = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ dn),
aj = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ dn),
ak = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
al = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ massbxcx),
am = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
an = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating),
ba = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating * massbxcx),
bb = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * mating * massbxcx),
bc = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
bd = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating * massbxcx),
be = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * massbxcx),
bf = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * massbxcx),
bg = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating),
bh = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds * mating),
bi = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ ds),
bj = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ ds),
bk = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
bl = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ massbxcx),
bm = DAG(ds ~ mating, dn ~ ds + massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
bn = DAG(ds ~ mating, mating ~ massbxcx * dn, dn ~ ds + massbxcx, sprich ~ mating)
)



resultdn1 <- phylo_path(modelsdn1, data = datpgls, tree = trs.cut)

modelsds1 <- list(
one = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating * massbxcx),
two = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ ds * mating * massbxcx),
three = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
four = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ mating * massbxcx),
five = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ ds * massbxcx),
six = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ ds * massbxcx),
seven = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ ds * mating),
eight = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ ds * mating),
nine = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ ds),
ten = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ ds),
eleven = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
twelve = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ massbxcx),
thirt = DAG(ds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
fourt = DAG(mating ~ massbxcx * ds, ds ~ massbxcx, sprich ~ mating)
)

resultds1 <- phylo_path(modelsds1, data = datpgls, tree = trs.cut)

modelsdnds1 <- list(
one = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ dnds * mating * massbxcx),
two = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ dnds * mating * massbxcx),
three = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ mating * massbxcx),
four = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ mating * massbxcx),
five = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ dnds * massbxcx),
six = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ dnds * massbxcx),
seven = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ dnds * mating),
eight = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ dnds * mating),
nine = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ dnds),
ten = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ dnds),
eleven = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ massbxcx),
twelve = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ massbxcx),
thirt = DAG(dnds ~ massbxcx * mating, mating ~ massbxcx, sprich ~ mating),
fourt = DAG(mating ~ massbxcx * dnds, dnds ~ massbxcx, sprich ~ mating)
)

resultdnds1 <- phylo_path(modelsdnds1, data = datpgls, tree = trs.cut)

modelsmating1 <- list(
one = DAG(dn ~ mating, ds ~ mating, sprich ~ dn + ds),
two = DAG(mating ~  dn + ds, sprich ~ dn + ds),
three = DAG(dn ~ mating, ds ~ mating, sprich ~ mating),
four = DAG(mating ~  dn + ds, sprich ~ mating),
five = DAG(dn ~ mating, ds ~ mating, sprich ~ dn + ds + mating),
six = DAG(mating ~  dn + ds, sprich ~ dn + ds + mating),
seven = DAG(dn ~ mating + ds, ds ~ mating, sprich ~ dn + ds),
eight = DAG(mating ~  dn + ds, dn ~ ds, sprich ~ dn + ds),
nine = DAG(dn ~ mating + ds, ds ~ mating, sprich ~ mating),
ten = DAG(mating ~  dn + ds, dn ~ ds, sprich ~ mating),
eleven = DAG(dn ~ mating + ds, ds ~ mating, sprich ~ dn + ds + mating),
twelve = DAG(mating ~  dn + ds, dn ~ ds, sprich ~ dn + ds + mating)
)

resultmaitng1 <- phylo_path(modelsmating1, data = datpgls, tree = trs.cut)

#pdf("pathsPrelim.pdf")

#plot(best(resultdn1))
#coef_plot(best(resultdn1))
#plot(average(resultdn1, method = "full"), curvature = 0.1)
#coef_plot(average(resultdn1, method = "full"))

#plot(best(resultds1))
#coef_plot(best(resultds1))
#plot(average(resultds1, method = "full"), curvature = 0.1)
#coef_plot(average(resultds1, method = "full"))

#plot(best(resultdnds1))
#coef_plot(best(resultdnds1))
#plot(average(resultdnds1, method = "full"), curvature = 0.1)
#coef_plot(average(resultdnds1, method = "full"))

#dev.off()
